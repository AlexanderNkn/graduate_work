version: '3.9'

services:

  web:
    container_name: movies_admin
    image: movies_admin:v1.5
    build:
      context: .
      dockerfile: movies_admin/docker/Dockerfile
    env_file:
      - ./movies_admin/envs/.admin.env
    volumes:
      - static_data:/usr/src/code/static/
    depends_on:
      - movies_admin_db

  movies_admin_db:
    container_name: movies_admin_db
    image: postgres:13-alpine
    env_file:
      - ./postgres/envs/.movies_admin_db.env
    volumes:
      - movies_admin_db_data:/var/lib/postgresql/data/

  es:
    container_name: elastic
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    environment:
      - discovery.type=single-node
    volumes:
      - elastic_data:/usr/share/elasticsearch/data

  postgres_elastic_etl:
    container_name: postgres_elastic_etl
    image: etl:v2.0
    build:
      context: .
      dockerfile: postgres_elastic_etl/docker/Dockerfile
    env_file:
      - ./postgres_elastic_etl/envs/.etl.env
    volumes:
      - etl_state:/usr/src/code/postgres_elastic_etl/data/
    depends_on:
      - movies_admin_db
      - es

  auth:
    container_name: auth
    image: auth:v2.0
    build:
      context: .
      dockerfile: auth/docker/Dockerfile
    env_file:
      - auth/envs/.auth.env
    depends_on:
      - auth_db
      - redis

  auth_db:
    container_name: auth_db
    image: postgres:13-alpine
    volumes:
      - auth_db_data:/var/lib/postgresql/data/
    env_file:
      - postgres/envs/.auth_db.env

  movies-api:
    container_name: movies_search
    image: movies_search:v3.0
    build:
      context: .
      dockerfile: movies_api/docker/Dockerfile
    env_file:
      - movies_api/envs/.movies_api.env
    depends_on:
      - es
      - redis

  assistant-api:
    container_name: voice_assistant
    image: voice_assistant:v1.0
    build:
      context: .
      dockerfile: assistant_api/docker/Dockerfile
    env_file:
      - assistant_api/envs/.assistant_api.env
    depends_on:
      - movies-api

  redis:
    container_name: redis
    image: redis:6.2.6-alpine
    restart: always
    volumes:
      - redis_data:/data

  nginx:
    container_name: nginx
    image: nginx:1.21.6
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/conf.d:ro
      - static_data:/usr/src/code/static/
    ports:
      - 80:80
    depends_on:
      - web
      - movies-api
      - auth
  openapi:
    container_name: openapi_server
    image: openapi_server:v1.0
    build:
      context: openapi-server
      dockerfile: Dockerfile
  jaeger:
    image: jaegertracing/all-in-one:1.31
    ports:
      - '16686:16686'
    volumes:
      - jaeger_data:/tmp
  test_auth:
    container_name: test_auth
    image: auth:v2.0
    env_file:
      - auth/envs/.auth.env
    command: >
      sh -c "flask db upgrade &&
             pytest auth/tests/functional/src"
    depends_on:
      - auth_db
      - redis
  test-movies-api:
    container_name: test_movies_api
    image: test_movies_api:v1.0
    build:
      context: .
      dockerfile: movies_api/tests/docker/Dockerfile
    env_file:
      - movies_api/envs/.movies_api.env
    depends_on:
      - es
      - redis
volumes:
  movies_admin_db_data:
  auth_db_data:
  redis_data:
  jaeger_data:
  elastic_data:
  etl_state:
  static_data:
