# Generated by Django 3.2 on 2021-11-07 11:22


from django.db import migrations, models


class Migration(migrations.Migration):
    atomic = False

    dependencies = [
        ('movies', '0001_initial'),
    ]

    operations = [
        migrations.SeparateDatabaseAndState(
            database_operations=[
                migrations.RunSQL(
                    sql=("CREATE INDEX CONCURRENTLY IF NOT EXISTS film_work_creation_date_idx "
                         "ON content.film_work(creation_date)"),
                    reverse_sql="DROP INDEX CONCURRENTLY IF EXISTS film_work_creation_date_idx"
                ),
            ],
            state_operations=[
                migrations.AddIndex(
                    model_name='filmwork',
                    index=models.Index(fields=['creation_date'], name='film_work_creation_date_idx'),
                ),
            ],
        ),
        migrations.SeparateDatabaseAndState(
            database_operations=[
                migrations.RunSQL(
                    sql=("CREATE INDEX CONCURRENTLY IF NOT EXISTS film_work_updated_at_idx "
                         "ON content.film_work(updated_at)"),
                    reverse_sql="DROP INDEX CONCURRENTLY IF EXISTS film_work_updated_at_idx"
                ),
            ],
            state_operations=[
                migrations.AddIndex(
                    model_name='filmwork',
                    index=models.Index(fields=['updated_at'], name='film_work_updated_at_idx'),
                ),
            ],
        ),
        migrations.SeparateDatabaseAndState(
            database_operations=[
                migrations.RunSQL(
                    sql=("CREATE INDEX CONCURRENTLY IF NOT EXISTS person_birth_date_idx "
                         "ON content.person(birth_date)"),
                    reverse_sql="DROP INDEX CONCURRENTLY IF EXISTS person_birth_date_idx"
                ),
            ],
            state_operations=[
                migrations.AddIndex(
                    model_name='person',
                    index=models.Index(fields=['birth_date'], name='person_birth_date_idx'),
                ),
            ],
        ),
        migrations.SeparateDatabaseAndState(
            database_operations=[
                migrations.RunSQL(
                    sql=("CREATE INDEX CONCURRENTLY IF NOT EXISTS person_updated_at_idx "
                         "ON content.person(updated_at)"),
                    reverse_sql="DROP INDEX CONCURRENTLY IF EXISTS person_updated_at_idx"
                ),
            ],
            state_operations=[
                migrations.AddIndex(
                    model_name='person',
                    index=models.Index(fields=['updated_at'], name='person_updated_at_idx'),
                ),
            ],
        ),
        migrations.SeparateDatabaseAndState(
            database_operations=[
                migrations.RunSQL(
                    sql=("CREATE INDEX CONCURRENTLY IF NOT EXISTS genre_updated_at_idx "
                         "ON content.genre(updated_at)"),
                    reverse_sql="DROP INDEX CONCURRENTLY IF EXISTS genre_updated_at_idx"
                ),
            ],
            state_operations=[
                migrations.AddIndex(
                    model_name='genre',
                    index=models.Index(fields=['updated_at'], name='genre_updated_at_idx'),
                ),
            ],
        ),
        migrations.SeparateDatabaseAndState(
            database_operations=[
                migrations.RunSQL(
                    sql=("CREATE UNIQUE INDEX CONCURRENTLY IF NOT EXISTS genre_film_work_film_work_id_genre_id_uniq "
                         "ON content.genre_film_work(film_work_id, genre_id)"),
                    reverse_sql="DROP INDEX CONCURRENTLY IF EXISTS genre_film_work_film_work_id_genre_id_uniq"
                ),
            ],
            state_operations=[
                migrations.AddConstraint(
                    model_name='filmworkgenre',
                    constraint=models.UniqueConstraint(fields=('film_work', 'genre'), name='genre_film_work_film_work_id_genre_id_uniq'),
                ),
            ],
        ),
        migrations.SeparateDatabaseAndState(
            database_operations=[
                migrations.RunSQL(
                    sql=("CREATE UNIQUE INDEX CONCURRENTLY IF NOT EXISTS person_film_work_film_work_id_person_id_uniq "
                         "ON content.person_film_work(film_work_id, person_id)"),
                    reverse_sql="DROP INDEX CONCURRENTLY IF EXISTS person_film_work_film_work_id_person_id_uniq"
                ),
            ],
            state_operations=[
                migrations.AddConstraint(
                    model_name='filmworkperson',
                    constraint=models.UniqueConstraint(fields=('film_work', 'person'), name='person_film_work_film_work_id_person_id_uniq'),
                ),
            ],
        ),
    ]
